<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hust.lw.dao.CustomerMapper">
  <resultMap id="BaseResultMap" type="com.hust.lw.model.Customer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="userName" jdbcType="VARCHAR" property="username" />
    <result column="gender" javaType="com.hust.lw.enums.Gender" jdbcType="INTEGER" property="gender" typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler" />
    <result column="hobby" javaType="com.hust.lw.enums.Hobby" jdbcType="VARCHAR" property="hobby" typeHandler="org.apache.ibatis.type.EnumTypeHandler"/>
    <result column="member" javaType="com.hust.lw.enums.Member" jdbcType="INTEGER" property="member" typeHandler="com.hust.lw.mybatis.type.MyMemberTypeHandler"/>
    <result column="userAge" jdbcType="INTEGER" property="userage" />
    <result column="userAddress" jdbcType="VARCHAR" property="useraddress" />
    <result column="reg_time" javaType="java.util.Date" jdbcType="VARCHAR" property="regTime" typeHandler="com.hust.lw.mybatis.type.MyDateTypeHandler"/>
  </resultMap>

  <insert id="addCustomer2" parameterType="com.hust.lw.model.Customer" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO customer(userName, userAge, gender, hobby, userAddress, member, reg_time) VALUES(#{username},#{userage},
    #{gender,javaType=com.hust.lw.enums.Gender,jdbcType=INTEGER,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},
    #{hobby,javaType=com.hust.lw.enums.Hobby,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.EnumTypeHandler},#{useraddress},
    #{member,javaType=com.hust.lw.enums.Member, jdbcType=INTEGER, typeHandler=com.hust.lw.mybatis.type.MyMemberTypeHandler},
    #{regTime,javaType=Date,jdbcType=VARCHAR,typeHandler=com.hust.lw.mybatis.type.MyDateTypeHandler})
  </insert>
  <select id="selectCustomerById2" parameterType="Long" resultMap="BaseResultMap">
    select * from Customer where id=#{id};
  </select>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, userName, gender, hobby, member, userAge, userAddress, reg_time
  </sql>
  <select id="selectByExample" parameterType="com.hust.lw.model.CustomerExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <include refid="Base_Column_List" />
    from customer
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from customer
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.hust.lw.model.CustomerExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hust.lw.model.Customer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into customer (id, userName, gender,
    hobby, member, userAge,
    userAddress, reg_time)
    values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER},
    #{hobby,jdbcType=VARCHAR}, #{member,jdbcType=INTEGER}, #{userage,jdbcType=INTEGER},
    #{useraddress,jdbcType=VARCHAR}, #{regTime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hust.lw.model.Customer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into customer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="username != null">
        userName,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="hobby != null">
        hobby,
      </if>
      <if test="member != null">
        member,
      </if>
      <if test="userage != null">
        userAge,
      </if>
      <if test="useraddress != null">
        userAddress,
      </if>
      <if test="regTime != null">
        reg_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=BIGINT},
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="hobby != null">
        #{hobby,jdbcType=VARCHAR},
      </if>
      <if test="member != null">
        #{member,jdbcType=INTEGER},
      </if>
      <if test="userage != null">
        #{userage,jdbcType=INTEGER},
      </if>
      <if test="useraddress != null">
        #{useraddress,jdbcType=VARCHAR},
      </if>
      <if test="regTime != null">
        #{regTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hust.lw.model.CustomerExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update customer
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.username != null">
        userName = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=INTEGER},
      </if>
      <if test="record.hobby != null">
        hobby = #{record.hobby,jdbcType=VARCHAR},
      </if>
      <if test="record.member != null">
        member = #{record.member,jdbcType=INTEGER},
      </if>
      <if test="record.userage != null">
        userAge = #{record.userage,jdbcType=INTEGER},
      </if>
      <if test="record.useraddress != null">
        userAddress = #{record.useraddress,jdbcType=VARCHAR},
      </if>
      <if test="record.regTime != null">
        reg_time = #{record.regTime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update customer
    set id = #{record.id,jdbcType=BIGINT},
    userName = #{record.username,jdbcType=VARCHAR},
    gender = #{record.gender,jdbcType=INTEGER},
    hobby = #{record.hobby,jdbcType=VARCHAR},
    member = #{record.member,jdbcType=INTEGER},
    userAge = #{record.userage,jdbcType=INTEGER},
    userAddress = #{record.useraddress,jdbcType=VARCHAR},
    reg_time = #{record.regTime,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hust.lw.model.Customer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update customer
    <set>
      <if test="username != null">
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="hobby != null">
        hobby = #{hobby,jdbcType=VARCHAR},
      </if>
      <if test="member != null">
        member = #{member,jdbcType=INTEGER},
      </if>
      <if test="userage != null">
        userAge = #{userage,jdbcType=INTEGER},
      </if>
      <if test="useraddress != null">
        userAddress = #{useraddress,jdbcType=VARCHAR},
      </if>
      <if test="regTime != null">
        reg_time = #{regTime,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hust.lw.model.Customer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update customer
    set userName = #{username,jdbcType=VARCHAR},
    gender = #{gender,jdbcType=INTEGER},
    hobby = #{hobby,jdbcType=VARCHAR},
    member = #{member,jdbcType=INTEGER},
    userAge = #{userage,jdbcType=INTEGER},
    userAddress = #{useraddress,jdbcType=VARCHAR},
    reg_time = #{regTime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>